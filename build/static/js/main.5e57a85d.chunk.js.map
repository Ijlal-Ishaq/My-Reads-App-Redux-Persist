{"version":3,"sources":["book.js","actions/moveToActions.js","bookShelf.js","home.js","BooksAPI.js","search.js","App.js","reducers/rootreducer.js","store.js","index.js"],"names":["connect","state","ownProps","id","shelfName","book","currentlyReading","find","wantToRead","read","dispatch","moveToCurrentlyReading","from","type","to","moveToWantToRead","moveToRead","remove","_ref","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","getThumbnail","onChange","e","target","value","replaceAll","moveTo","disabled","title","authors","books","length","map","i","src_book","key","textAlign","home","src_bookShelf","react_router_dom","textDecoration","border","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","searchPage","move_to","_useState","useState","_useState2","Object","slicedToArray","query","setQuery","_useState3","_useState4","results","setResults","_useState5","_useState6","searching","setsearching","_useState7","_useState8","not_found","setNotfound","search","fetch","concat","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","BooksAPI","result","undefined","error","placeholder","App","react_router","exact","path","component","Home","Search","initState","rootReducer","arguments","action","newCurrentlyReading","filter","newwantToRead","newread","push","persistConfig","storage","pReducer","persistReducer","store","createStore","persistStore","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5e57a85d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {moveToCurrentlyReading,moveToWantToRead,moveToRead,remove} from './actions/moveToActions'\r\n\r\nfunction book({id,shelfName,book,moveToCurrentlyReading,moveToWantToRead,moveToRead,remove}) {\r\n\r\n\r\n    const getThumbnail=(book)=>{\r\n\r\n        if(book.imageLinks){\r\n            return book.imageLinks.thumbnail\r\n        }else{\r\n            return '' //image not found\r\n        }\r\n  \r\n    }\r\n\r\n\r\n    const moveTo=(e)=>{\r\n\r\n        if(e.target.value==='currentlyReading'){\r\n\r\n            moveToCurrentlyReading(id,shelfName.replaceAll(' ',''),book)//replacing all spaces from the shelf name.\r\n\r\n        }\r\n        else if(e.target.value==='wantToRead'){\r\n\r\n            moveToWantToRead(id,shelfName.replaceAll(' ',''),book)\r\n\r\n        }\r\n        else if(e.target.value==='read'){\r\n\r\n            moveToRead(id,shelfName.replaceAll(' ',''),book)\r\n\r\n        }\r\n        else{\r\n\r\n            remove(book.id,shelfName.replaceAll(' ',''),book)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url('+getThumbnail(book)+')' }}></div>\r\n                <div className=\"book-shelf-changer\">\r\n                    <select onChange={(e) => moveTo(e)} value={shelfName==='Currently Reading' ? 'currentlyReading' : shelfName==='Want To Read' ? 'wantToRead' : shelfName==='Read' ? 'read' : 'move' }>\r\n                        <option value=\"move\" disabled>Move to...</option>\r\n                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                    </select>\r\n                </div>\r\n                </div>\r\n                <div className=\"book-title\">{book.title}</div>\r\n                <div className=\"book-authors\">{book.authors}</div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n\r\n    const id = ownProps.id;\r\n    const shelfName = ownProps.shelfName;\r\n\r\n    if(shelfName==='Currently Reading'){\r\n\r\n        return{\r\n            book:state.currentlyReading.find(book => book.id===id)\r\n        }\r\n\r\n    }else if(shelfName==='Want To Read'){\r\n\r\n        return{\r\n            book:state.wantToRead.find(book => book.id===id)\r\n        }\r\n\r\n    }else if (shelfName==='Read'){\r\n\r\n        return{\r\n            book:state.read.find(book => book.id===id)\r\n        }\r\n\r\n    }else{\r\n\r\n        return{}\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        moveToCurrentlyReading : (id,from,book) => {dispatch (moveToCurrentlyReading(id,from,book))},\r\n        moveToWantToRead : (id,from,book) => {dispatch (moveToWantToRead(id,from,book))},\r\n        moveToRead : (id,from,book) => {dispatch (moveToRead(id,from,book))},\r\n        remove : (id,from) => {dispatch(remove(id,from))}\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(book)\r\n","export const moveToCurrentlyReading = (id,from,book) =>{\r\n\r\n    return{\r\n        type : 'MOVE_TO',\r\n        id,\r\n        to: 'CurrentlyReading',\r\n        from,\r\n        book,\r\n    }\r\n\r\n} \r\n\r\nexport const moveToWantToRead = (id,from,book) =>{\r\n\r\n    return{\r\n        type : 'MOVE_TO',\r\n        id,\r\n        to: 'WantToRead',\r\n        from,\r\n        book,\r\n    }\r\n\r\n} \r\n\r\nexport const moveToRead = (id,from,book) =>{\r\n\r\n    return{\r\n        type : 'MOVE_TO',\r\n        id,\r\n        to: 'Read',\r\n        from,\r\n        book,\r\n    }\r\n\r\n} \r\n\r\nexport const remove = (id,from,book)=>{\r\n    return{\r\n        type : 'REMOVE',\r\n        id,\r\n        from,\r\n        book,\r\n    }\r\n}","import React from 'react'\r\nimport Book from './book'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction bookShelf({shelfName,books}) {\r\n\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{shelfName}</h2>\r\n\r\n            {\r\n\r\n                books.length !== 0 ? (\r\n\r\n                  <div className=\"bookshelf-books\">\r\n                      <ol className=\"books-grid\">{\r\n\r\n                          books.map((book,i)=>{\r\n\r\n                              return(\r\n                                    \r\n                                      <Book id={book.id} shelfName={shelfName} key={i} />                                \r\n  \r\n                              );\r\n                          \r\n  \r\n                          })\r\n\r\n\r\n                      }\r\n\r\n                      </ol>\r\n                  </div>\r\n                    \r\n\r\n                ) : <h3 style={{textAlign:'center'}}>No Books</h3>\r\n                \r\n\r\n            }\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProp = (state, ownProps) =>{\r\n\r\n    const shelfName=ownProps.shelfName;\r\n\r\n    return{\r\n        books: shelfName === 'Currently Reading' ? state.currentlyReading : shelfName==='Want To Read' ? state.wantToRead : state.read,\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProp)(bookShelf)\r\n","import React from 'react'\r\nimport './App.css'\r\nimport {Link} from 'react-router-dom';\r\nimport BookShelf from './bookShelf';\r\n\r\n\r\n\r\nconst home = () =>{\r\n\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n          \r\n          <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n             \r\n              <div>\r\n             \r\n                  <BookShelf shelfName='Currently Reading'/>\r\n                  <BookShelf shelfName='Want To Read'/>\r\n                  <BookShelf shelfName='Read'/>\r\n                  \r\n\r\n              </div>\r\n          \r\n          </div>\r\n       \r\n       \r\n       \r\n          <div className=\"open-search\">\r\n                  <Link to={'/search'}>\r\n                      <button style={{textDecoration:'none',border:'none'}}>Add a book</button>\r\n                  </Link>\r\n          </div>\r\n          </div>\r\n          \r\n        </div>\r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default (home)","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport {Link} from 'react-router-dom';\r\nimport './App.css';\r\nimport { useState } from 'react';\r\nimport Book from './book'\r\n\r\n\r\n\r\nconst searchPage = ({move_to}) =>{\r\n\r\n    const[query,setQuery]=useState('');\r\n    const[results,setResults]=useState([]);\r\n    const[searching,setsearching]=useState(false); // flag\r\n    const[not_found,setNotfound]=useState(false); // flag\r\n\r\n\r\n    const search=(e)=>{\r\n\r\n        if(e.target.value === '') {\r\n        \r\n            setResults([]);\r\n            setNotfound(false);\r\n            setsearching(false);\r\n            setQuery(e.target.value);\r\n\r\n            return\r\n        };\r\n\r\n        setsearching(true);\r\n        setNotfound(false);\r\n        setQuery(e.target.value);\r\n        \r\n        BooksAPI.search(e.target.value).then(result=>{\r\n\r\n\r\n            if(result!==undefined && !result.error){\r\n              \r\n                setResults(result !== null ? result : []);\r\n                setNotfound(false);\r\n                setsearching(false);\r\n           \r\n            \r\n            }else{\r\n\r\n                setResults([]);\r\n                setNotfound(query === '' ? false : true);\r\n                setsearching(false);\r\n\r\n            }\r\n            \r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n\r\n                <Link to={'/'}>\r\n                   <button className=\"close-search\" style={{textDecoration:'none',border:'none'}} >Close</button>\r\n                </Link> \r\n\r\n\r\n              <div className=\"search-books-input-wrapper\">\r\n                \r\n                <input type=\"text\" placeholder=\"Search by title or author\" onChange={(e)=>search(e)}/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n              \r\n                {\r\n\r\n                    results.length !== 0 && query !== '' ? (\r\n\r\n                            results.map((book,i)=>{\r\n\r\n                                return(\r\n    \r\n                                    <Book book={book} shelfName='Search' key={i} />\r\n    \r\n                                );\r\n                            \r\n    \r\n                            })\r\n\r\n                    ) : (\r\n\r\n                        searching ? <h3>Searching...</h3> : query==='' ? <h3>Search Books</h3> : not_found ? <h3>No Result</h3> : <h3>Search Books</h3>\r\n\r\n                    )\r\n                    \r\n\r\n                }\r\n\r\n              </ol>\r\n            </div>\r\n          </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default searchPage;","import React from 'react'\nimport './App.css'\nimport {BrowserRouter , Route} from 'react-router-dom';\nimport Home from './home';\nimport Search from './search';\n\n\nconst App = () => {\n\n\n    return (\n        <div className=\"App\">\n        \n        <BrowserRouter>\n          \n          <Route exact path='/' component={Home}></Route>\n          <Route path='/search' component={Search}></Route>\n       \n        </BrowserRouter>\n    \n    \n        </div>\n      );\n    \n\n\n}\n\n\nexport default App;\n","const initState={\r\n    currentlyReading: [] ,\r\n    wantToRead: [],\r\n    read: [],\r\n}\r\n\r\nconst rootReducer = (state=initState , action) =>{\r\n\r\n    if(action.type==='MOVE_TO'){\r\n\r\n        let book = null;\r\n\r\n        //Removing from the current shelf and searching book with the id. \r\n\r\n        let newCurrentlyReading=state.currentlyReading.filter(book=>book.id!==action.book.id);\r\n        let newwantToRead=state.wantToRead.filter(book=>book.id!==action.book.id);\r\n        let newread=state.read.filter(book=>book.id!==action.book.id);\r\n          \r\n        if(action.from==='CurrentlyReading'){\r\n            book = state.currentlyReading.find(book=>book.id===action.id);\r\n        }\r\n        \r\n        else if(action.from==='WantToRead'){\r\n            book = state.wantToRead.find(book=>book.id===action.id);           \r\n        }\r\n\r\n        else if(action.from==='Read'){\r\n            book = state.read.find(book=>book.id===action.id);            \r\n        }\r\n\r\n        else if(action.from==='Search'){\r\n            book=action.book;\r\n        }\r\n\r\n\r\n        //adding book to the new shelf. \r\n\r\n        if(action.to==='CurrentlyReading'){\r\n\r\n            newCurrentlyReading.push(book);\r\n\r\n        }else if(action.to==='WantToRead'){\r\n\r\n            newwantToRead.push(book);\r\n\r\n        }else if(action.to==='Read'){\r\n\r\n            newread.push(book);\r\n\r\n        }\r\n\r\n        return{\r\n            ...state,\r\n            currentlyReading:newCurrentlyReading,\r\n            wantToRead:newwantToRead,\r\n            read:newread,\r\n        }\r\n\r\n    }\r\n\r\n    if(action.type==='REMOVE'){\r\n\r\n\r\n        if(action.from==='CurrentlyReading'){\r\n            let newCurrentlyReading = state.currentlyReading.filter(book=>book.id!==action.id);\r\n            return{\r\n                ...state,\r\n                currentlyReading:newCurrentlyReading,\r\n            }\r\n        }\r\n        \r\n        else if(action.from==='WantToRead'){\r\n            let newwantToRead = state.wantToRead.filter(book=>book.id!==action.id);\r\n            return{\r\n                ...state,\r\n                wantToRead:newwantToRead,\r\n            }\r\n        }\r\n\r\n        else if(action.from==='Read'){\r\n            let newread = state.read.filter(book=>book.id!==action.id);\r\n            return{\r\n                ...state,\r\n                read:newread,\r\n            }\r\n        }\r\n\r\n        else if(action.from==='Search'){\r\n            let newCurrentlyReading = state.currentlyReading.filter(book=>book.id!==action.id);\r\n            let newwantToRead = state.wantToRead.filter(book=>book.id!==action.id);\r\n            let newread = state.read.filter(book=>book.id!==action.id);\r\n            return{\r\n                ...state,\r\n                currentlyReading:newCurrentlyReading,\r\n                wantToRead:newwantToRead,\r\n                read:newread,\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return state;\r\n\r\n\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from './reducers/rootreducer';\r\n\r\nconst persistConfig = {\r\n  key: 'rootreducer',\r\n  storage: storage,\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n// const middleware = applyMiddleware(thunk, logger);\r\nconst store = createStore(pReducer);\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport { store } from './store';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'))\n"],"sourceRoot":""}